# Deploys new build in live
name: Generate release notes

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Enter release tag number'
        required: true
      passcode:
        description: 'Enter passcode'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# 1. get current version from package.json
# 2. check release_tag match
# 3. if no match, continue to next job
# 4. if match, run release script and merge commit
jobs:
  ChangeLogAlpha:
    runs-on: ubuntu-latest
    strategy:
      # setting this flag so even if one job fails, others will continue
      fail-fast: false
    outputs:
      release_tag: ${{ steps.release_tag.output.number }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE with selected branch, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: master
      - id: release_tag
        run: |
          current_release_tag=$(grep -m 1 -E "version" package.json | cut -c 15- | rev | cut -c 3- | rev)
          if [[ ${current_release_tag} != ${{github.event.inputs.release_tag}} ]]; then
            echo 'Proceeding with user selected release tag';
            echo "##[set-output name=number;]$(echo ${{github.event.inputs.release_tag}})"
            exit 1
          else 
            echo 'Generating release notes and bumping version';
            git config --global user.email "noreply@remo.co"
            git config --global user.name "Release Notes"
            npx standard-version --no-verify
            git push --follow-tags origin master
            bumped_release_tag=$(grep -m 1 -E "version" package.json | cut -c 15- | rev | cut -c 3- | rev)
            echo "New Release Tag: $bumped_release_tag"
            echo "##[set-output name=number;]$(echo $bumped_release_tag)"
          fi
      - name: Log output
        run: |
          echo "Logging prev step output"
          echo "${{ steps.release_tag.outputs.release_tag }}"
          rel_tag=${{ steps.release_tag.outputs.release_tag }}
          echo "${rel_tag}"
  DeployLive:
    if: always()
    needs: ChangeLogAlpha
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Outputs:"
          echo "${{needs.ChangeLogAlpha.outputs.release_tag}}"
